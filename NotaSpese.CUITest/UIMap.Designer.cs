// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace NotaSpese.CUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestPlatform.UnitTestFramework;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap
    {
        
        #region Properties
        public UIStartWindow UIStartWindow
        {
            get
            {
                if ((this.mUIStartWindow == null))
                {
                    this.mUIStartWindow = new UIStartWindow();
                }
                return this.mUIStartWindow;
            }
        }
        
        public UINotaSpeseWindow UINotaSpeseWindow
        {
            get
            {
                if ((this.mUINotaSpeseWindow == null))
                {
                    this.mUINotaSpeseWindow = new UINotaSpeseWindow();
                }
                return this.mUINotaSpeseWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIStartWindow mUIStartWindow;
        
        private UINotaSpeseWindow mUINotaSpeseWindow;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIStartWindow : UITestControl
    {
        
        public UIStartWindow()
        {
            #region Search Criteria
            this.TechnologyName = "UIA";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Window";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Start";
            this.SearchProperties["FrameworkId"] = "UIX";
            #endregion
        }
        
        #region Properties
        public UIScrollerPane UIScrollerPane
        {
            get
            {
                if ((this.mUIScrollerPane == null))
                {
                    this.mUIScrollerPane = new UIScrollerPane(this);
                }
                return this.mUIScrollerPane;
            }
        }
        #endregion
        
        #region Fields
        private UIScrollerPane mUIScrollerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIScrollerPane : UITestControl
    {
        
        public UIScrollerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.TechnologyName = "UIA";
            this.SearchProperties["FrameworkId"] = "UIX";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = null;
            this.SearchProperties["AutomationId"] = "Scroller";
            #endregion
        }
        
        #region Properties
        public UITestControl UINotaSpeseListItem
        {
            get
            {
                if ((this.mUINotaSpeseListItem == null))
                {
                    this.mUINotaSpeseListItem = new UITestControl(this);
                    #region Search Criteria
                    this.mUINotaSpeseListItem.TechnologyName = "UIA";
                    this.mUINotaSpeseListItem.SearchProperties["FrameworkId"] = "UIX";
                    this.mUINotaSpeseListItem.SearchProperties[UITestControl.PropertyNames.ControlType] = "ListItem";
                    this.mUINotaSpeseListItem.SearchProperties["AutomationId"] = "{F4DE85AF-57CF-4833-8D1D-32190FE39E76}:App:f4de85af-57cf-4833-8d1d-32190fe39e76_x" +
                        "n6pvyr3tpx86!App";
                    #endregion
                }
                return this.mUINotaSpeseListItem;
            }
        }
        #endregion
        
        #region Fields
        private UITestControl mUINotaSpeseListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UINotaSpeseWindow : XamlWindow
    {
        
        public UINotaSpeseWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "NotaSpese";
            #endregion
        }
        
        #region Properties
        public XamlButton UIRegistranuovanotaspeButton
        {
            get
            {
                if ((this.mUIRegistranuovanotaspeButton == null))
                {
                    this.mUIRegistranuovanotaspeButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIRegistranuovanotaspeButton.SearchProperties[XamlButton.PropertyNames.Name] = "Registra nuova nota spese";
                    #endregion
                }
                return this.mUIRegistranuovanotaspeButton;
            }
        }
        
        public XamlButton UIVisualizzalenotespesButton
        {
            get
            {
                if ((this.mUIVisualizzalenotespesButton == null))
                {
                    this.mUIVisualizzalenotespesButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIVisualizzalenotespesButton.SearchProperties[XamlButton.PropertyNames.Name] = "Visualizza le note spese";
                    #endregion
                }
                return this.mUIVisualizzalenotespesButton;
            }
        }
        
        public XamlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new XamlEdit(this);
                }
                return this.mUIItemEdit;
            }
        }
        
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        
        public XamlEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new XamlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.SearchProperties[XamlEdit.PropertyNames.Instance] = "3";
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public XamlEdit UIItemEdit2
        {
            get
            {
                if ((this.mUIItemEdit2 == null))
                {
                    this.mUIItemEdit2 = new XamlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit2.SearchProperties[XamlEdit.PropertyNames.Instance] = "2";
                    #endregion
                }
                return this.mUIItemEdit2;
            }
        }
        #endregion
        
        #region Fields
        private XamlButton mUIRegistranuovanotaspeButton;
        
        private XamlButton mUIVisualizzalenotespesButton;
        
        private XamlEdit mUIItemEdit;
        
        private UIItemList mUIItemList;
        
        private XamlEdit mUIItemEdit1;
        
        private XamlEdit mUIItemEdit2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemList : XamlList
    {
        
        public UIItemList(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public XamlListItem UIRomaNapoliListItem
        {
            get
            {
                if ((this.mUIRomaNapoliListItem == null))
                {
                    this.mUIRomaNapoliListItem = new XamlListItem(this);
                    #region Search Criteria
                    this.mUIRomaNapoliListItem.SearchProperties[XamlListItem.PropertyNames.Name] = "Roma -> Napoli";
                    #endregion
                }
                return this.mUIRomaNapoliListItem;
            }
        }
        #endregion
        
        #region Fields
        private XamlListItem mUIRomaNapoliListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemWindow : UITestControl
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.TechnologyName = "UIA";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Window";
            this.SearchProperties["FrameworkId"] = "UIX";
            #endregion
        }
        
        #region Properties
        public UITestControl UIForwardButton
        {
            get
            {
                if ((this.mUIForwardButton == null))
                {
                    this.mUIForwardButton = new UITestControl(this);
                    #region Search Criteria
                    this.mUIForwardButton.TechnologyName = "UIA";
                    this.mUIForwardButton.SearchProperties["FrameworkId"] = "UIX";
                    this.mUIForwardButton.SearchProperties[UITestControl.PropertyNames.ControlType] = "Button";
                    this.mUIForwardButton.SearchProperties[UITestControl.PropertyNames.Name] = "forward";
                    #endregion
                }
                return this.mUIForwardButton;
            }
        }
        
        public UISincronizzazioneWindow UISincronizzazioneWindow
        {
            get
            {
                if ((this.mUISincronizzazioneWindow == null))
                {
                    this.mUISincronizzazioneWindow = new UISincronizzazioneWindow(this);
                }
                return this.mUISincronizzazioneWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITestControl mUIForwardButton;
        
        private UISincronizzazioneWindow mUISincronizzazioneWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UISincronizzazioneWindow : UITestControl
    {
        
        public UISincronizzazioneWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.TechnologyName = "UIA";
            this.SearchProperties["FrameworkId"] = "UIX";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Window";
            this.SearchProperties["AutomationId"] = "PopupHost";
            #endregion
        }
        
        #region Properties
        public UITestControl UIChiudiButton
        {
            get
            {
                if ((this.mUIChiudiButton == null))
                {
                    this.mUIChiudiButton = new UITestControl(this);
                    #region Search Criteria
                    this.mUIChiudiButton.TechnologyName = "UIA";
                    this.mUIChiudiButton.SearchProperties["FrameworkId"] = "UIX";
                    this.mUIChiudiButton.SearchProperties[UITestControl.PropertyNames.ControlType] = "Button";
                    this.mUIChiudiButton.SearchProperties[UITestControl.PropertyNames.Name] = "chiudi";
                    #endregion
                }
                return this.mUIChiudiButton;
            }
        }
        #endregion
        
        #region Fields
        private UITestControl mUIChiudiButton;
        #endregion
    }
}
